
- name: Ensure keystore directory exists
  ansible.builtin.file:
    path: "{{ local_keystore_dir }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  become: false

- name: Generate private key for each node
  community.crypto.openssl_privatekey:
    path: "{{ local_keystore_dir }}/{{ item }}.key"
    size: 2048
    type: RSA
    # Add protection for the key (optional, but recommended)
    # mode: '0600'
  loop: "{{ cassandra_nodes }}"
  delegate_to: localhost
  become: false
  no_log: true

- name: Build SAN list with all Cassandra node names and IPs
  ansible.builtin.set_fact:
    cassandra_san: >-
      {{ (cassandra_nodes | map('regex_replace', '^(.*)$', 'DNS:\1') | list) +
          (cassandra_node_ips | map('regex_replace', '^(.*)$', 'IP:\1') | list) }}
  when: cassandra_san is not defined

- name: Generate CSR for each node
  community.crypto.openssl_csr:
    path: "{{ local_keystore_dir }}/{{ item }}.csr"
    privatekey_path: "{{ local_keystore_dir }}/{{ item }}.key"
    common_name: "{{ item }}"
    country_name: "{{ certificate_subject.C }}"
    state_or_province_name: "{{ certificate_subject.ST }}"
    locality_name: "{{ certificate_subject.L }}"
    organization_name: "{{ certificate_subject.O }}"
    organizational_unit_name: "{{ certificate_subject.OU }}"
    subject_alt_name: "{{ cassandra_san }}"
  loop: "{{ cassandra_nodes }}"
  delegate_to: localhost
  become: false
  no_log: true

- name: Generate self-signed certificate for each node
  community.crypto.x509_certificate:
    path: "{{ local_keystore_dir }}/{{ item }}.crt"
    privatekey_path: "{{ local_keystore_dir }}/{{ item }}.key"
    csr_path: "{{ local_keystore_dir }}/{{ item }}.csr"
    provider: selfsigned
    selfsigned_not_after: "+3650d"
  loop: "{{ cassandra_nodes }}"
  delegate_to: localhost
  become: false
  no_log: true

- name: Create Java keystore for each node
  community.general.java_keystore:
    name: "{{ item }}"
    certificate: "{{ lookup('file', local_keystore_dir + '/' + item + '.crt') }}"
    private_key: "{{ lookup('file', local_keystore_dir + '/' + item + '.key') }}"
    password: "{{ cassandra_ssl_keystore_pass }}"
    dest: "{{ local_keystore_dir }}/{{ item }}.jks"
    keystore_type: jks
    mode: '0600'
  loop: "{{ cassandra_nodes }}"
  delegate_to: localhost
  become: false
  no_log: true

- name: Create truststore with all node certificates
  community.general.java_cert:
    cert_alias: "{{ item }}"
    cert_path: "{{ local_keystore_dir }}/{{ item }}.crt"
    keystore_path: "{{ local_keystore_dir }}/truststore.jks"
    keystore_pass: "{{ cassandra_ssl_client_truststore_pass }}"
    keystore_create: true
    keystore_type: jks
    state: present
  loop: "{{ cassandra_nodes }}"
  delegate_to: localhost
  become: false
  #no_log: true
  run_once: true

- name: Define jks glob
  ansible.builtin.set_fact:
    cassandra_ssl_files: "{{ lookup('ansible.builtin.fileglob', local_keystore_dir + '/*') | split(',') }}"
  delegate_to: localhost
  become: false
