---
- name: Install epel
  package:
    name: epel-release
    state: present
  when: ansible_os_family == 'RedHat'

- set_fact:
    nginx_conf_file: "/etc/nginx/conf.d/axon_dash.conf"
    python_crypto: ["python36-cryptography", "python-cryptography", "python-passlib"]
  when: ansible_os_family == 'RedHat'

- set_fact:
    nginx_conf_file: "/etc/nginx/sites-enabled/axon_dash"
    python_crypto: ["python3-cryptography", "python-passlib", "python3-passlib"]
  when: ansible_os_family == 'Debian'

- name: Ensure config dir exists
  file:
    state: directory
    path: "{{ nginx_conf_file | dirname }}"
    recurse: true
    mode: 0755

- name: Python crypto modules
  package:
    name: "{{ python_crypto }}"
    state: latest

- name: Generate a Self Signed OpenSSL certificate for Node Exporter
  block:
    - name: Generate an OpenSSL private key.
      openssl_privatekey:
        path: "{{ axon_dash_nginx.ssl_key }}"

    - name: Generate an OpenSSL CSR.
      openssl_csr:
        path: "{{ axon_dash_nginx.ssl_csr }}"
        privatekey_path: "{{ axon_dash_nginx.ssl_key }}"
        common_name: "{{ axon_dash_nginx.hostname }}"

    - name: Gen certs
      openssl_certificate:
        path: "{{ axon_dash_nginx.ssl_cert }}"
        privatekey_path: "{{ axon_dash_nginx.ssl_key }}"
        csr_path: "{{ axon_dash_nginx.ssl_csr }}"
        provider: selfsigned
  when: axon_dash_nginx.ssl_create

- name: Install nginx
  package:
    name: nginx
    state: present

- name: Install nginx template
  template:
    dest: "{{ nginx_conf_file }}"
    src: "nginx.conf.j2"
    mode: 0644
  notify: reload nginx

- name: Start up nginx
  service:
    name: nginx
    state: started
