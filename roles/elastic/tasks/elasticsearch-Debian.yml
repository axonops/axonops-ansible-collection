---

- name: set fact force_install to no
  set_fact: force_install=no

- name: set fact force_install to yes
  set_fact: force_install=yes
  when: es_allow_downgrades

- name: Gracefully stop and remove elasticsearch package if switching between OSS and standard
  become: true
  block:
  - name: Check if the elasticsearch package is installed
    shell: "dpkg-query -W -f'${Status}' {{ es_other_package_name }}"
    register: elasticsearch_package
    failed_when: False
    changed_when: False
    check_mode: no

  - name: unhold elasticsearch package when switching to a different package type
    become: true
    dpkg_selections:
      name: "{{ es_other_package_name }}"
      selection: "install"
    when: elasticsearch_package.stdout == 'install ok installed'

  - name: stop elasticsearch
    service:
      name: 'elasticsearch'
      state: stopped
    when: elasticsearch_package.stdout == 'install ok installed'

  - name: Debian - Remove elasticsearch package if we are switching to a different package type
    package:
      name: '{{ es_other_package_name }}'
      state: absent
    when: elasticsearch_package.stdout == 'install ok installed'

- name: Install Elasticsearch repository
  when: es_use_repository
  become: true
  block:
    - name: Debian - Install apt-transport-https to support https APT downloads
      package:
        name:
          - apt-transport-https
          - gnupg
          - curl
          - wget
        state: present

    - name: Download and install Elasticsearch GPG key
      ansible.builtin.uri:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        return_content: yes
      register: key_content

    - name: Dearmor and save the key
      ansible.builtin.shell:
        cmd: echo "{{ key_content.content }}" | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
        creates: /usr/share/keyrings/elasticsearch-keyring.gpg

    - name: Add Elasticsearch repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/{{ es_version.split('.')[0] }}.x/apt stable main"
        state: present
        filename: elasticsearch-{{ es_version.split('.')[0] }}.x

- name: Include optional user and group creation.
  when: (es_user_id is defined) and (es_group_id is defined)
  include_tasks: elasticsearch-optional-user.yml

- name: Debian - Get installed elasticsearch version
  command: dpkg-query --showformat='${Version}' --show {{ es_package_name }}
  register: installed_es_version
  failed_when: False
  changed_when: False
  check_mode: no

- name: Debian - unhold elasticsearch version
  become: true
  dpkg_selections:
    name: "{{ es_package_name }}"
    selection: "install"
  when: not es_version_lock or (installed_es_version.stdout and installed_es_version.stdout != es_version)
  ignore_errors: true

- name: Debian - Ensure elasticsearch is installed
  become: true
  package:
    name: '{{ es_package_name }}{% if es_version is defined and es_version != "" %}={{ es_version }}{% endif %}'
    state: present
    force: '{{ force_install }}'
    allow_unauthenticated: "{{ 'no' if es_apt_key else 'yes' }}"
    cache_valid_time: 86400
  when: es_use_repository
  register: debian_elasticsearch_install_from_repo
  notify: restart elasticsearch
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"

- name: Debian - hold elasticsearch version
  become: true
  dpkg_selections:
    name: "{{ es_package_name }}"
    selection: "hold"
  when: es_version_lock

# workaround due to https://github.com/ansible/ansible/issues/66977
- set_fact:
    es_deb_url: "{% if es_version is version('7.0.0', '>=') %}{{ es_package_url }}-{{ es_version }}-amd64.deb{% else %}{{ es_package_url }}-{{ es_version }}.deb{% endif %}"

- name: Debian - Install Elasticsearch from url
  become: true
  package:
    deb: "{% if es_custom_package_url is defined %}{{ es_custom_package_url }}{% else %}{{ es_deb_url }}{% endif %}"
    state: present
  when: not es_use_repository
  register: elasticsearch_install_from_package
  notify: restart elasticsearch
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"
