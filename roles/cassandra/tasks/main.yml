- name: Import vars for 4.1
  ansible.builtin.include_vars: cassandra-4.1.yml
  when: cassandra_version.startswith('4.1')
  tags: always

- name: Import vars for 5.0
  ansible.builtin.include_vars: cassandra-5.0.yml
  when: cassandra_version.startswith('5.0')
  tags: always

- name: Install from pkg
  when: cassandra_install_format == "pkg"
  ansible.builtin.import_tasks: install-pkg.yml

- name: Install from tar
  when: cassandra_install_format == "tar"
  ansible.builtin.import_tasks: install-tar.yml

- name: Create AxonOps User
  tags: axonops_user
  block:
    - name: Check if axonops user exists and get groups
      ansible.builtin.getent:
        database: group
      register: group_info

    - name: Get axonops user info
      ansible.builtin.getent:
        database: passwd
        key: axonops
      register: user_info
      failed_when: false

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Stop axon-agent if axonops user doesn't belong to cassandra group
      ansible.builtin.systemd:
        name: axon-agent
        state: stopped
      register: stop_service
      failed_when:
        - stop_service.failed == true
        - '"Could not find the requested service" not in stop_service.msg'
      when:
        - ansible_facts.services['axon-agent.service'] is defined
        - ansible_facts.services['axon-agent.service'].status | default('not-found') != 'not-found'
        - user_info.ansible_facts.getent_passwd.axonops is defined
        - "'cassandra' not in (group_info.ansible_facts.getent_group | dict2items | selectattr('value.2', 'search', user_info.ansible_facts.getent_passwd.axonops.1) | map(attribute='key') | list)"


    - name: AxonOps user
      ansible.builtin.user:
        name: axonops
        groups: cassandra
        shell: /bin/bash
        home: /home/axonops

    - name: Add axonops to cassandra
      ansible.builtin.user:
        name: cassandra
        groups: axonops
        append: true

    - name: Start axon-agent
      ansible.builtin.systemd:
        name: axon-agent
        state: started
      when:
        - ansible_facts.services['axon-agent.service'] is defined
        - ansible_facts.services['axon-agent.service'].status | default('not-found') != 'not-found'

- name: Create main directories
  ansible.builtin.file:
    path: "{{ item }}"
    mode: "0750"
    owner: "cassandra"
    group: "cassandra"
    state: directory
  with_items:
    - "{{ cassandra_log_dir }}"
    - "{{ cassandra_hints_directory }}"
    - "{{ cassandra_gc_log_dir }}"
    - "{{ cassandra_saved_caches_directory }}"
    - "{{ cassandra_data_directory }}"

- name: Deploy configuration
  tags: config
  block:
    - name: Template directory
      ansible.builtin.set_fact:
        tmpl_dir: 5.0.x
      when: cassandra_version.startswith('5.')

    - name: Template directory
      ansible.builtin.set_fact:
        tmpl_dir: 4.1.x
      when: cassandra_version.startswith('4.1')

    - name: Ensure Cassandra node configured
      ansible.builtin.template:
        src: "{{ tmpl_dir }}/{{ item }}.j2"
        dest: "{{ cassandra_conf_dir | default('/etc/cassandra') }}/{{ item }}"
        mode: "0644"
      with_items:
        - cassandra-env.sh
        - cassandra-rackdc.properties
        - cassandra.yaml
        - logback.xml
        - jvm-server.options
        - jvm11-server.options
        - jvm-clients.options
        - jvm11-clients.options

    - name: Ensure Cassandra node configured (5.x only)
      ansible.builtin.template:
        src: "{{ tmpl_dir }}/{{ item }}.j2"
        dest: "{{ cassandra_conf_dir | default('/etc/cassandra') }}/{{ item }}"
        mode: "0644"
      with_items:
        - jvm17-server.options
        - jvm17-clients.options

- name: Systemd service for cassandra
  ansible.builtin.template:
    dest: /etc/systemd/system/cassandra.service
    src: templates/cassandra.service.j2
    mode: "0644"
    owner: root
    group: root
  notify: Reload systemd

- name: Start cassandra
  tags: service
  ansible.builtin.systemd:
    name: cassandra
    enabled: true
    state: started
  when: cassandra_start_on_boot is defined and cassandra_start_on_boot

# code: language=ansible
